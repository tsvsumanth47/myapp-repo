name: SonarCloud
#on:
#  push:
 #   branches:
  #    - master
 # pull_request:
  #  types: [opened, synchronize, reopened]

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
        
permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=tsvsumanth47_myapp-repo

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
         audience: sts.amazonaws.com
         aws-region: us-west-2
         role-to-assume: arn:aws:iam::339712826475:role/aws-cred-role

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: springboot-eks-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      #- name: Build and Push Docker Image
      #  run: |
      #   docker build -t springboot-eks-repo .
      #   docker tag springboot-eks-repo:latest 339712826475.dkr.ecr.us-west-2.amazonaws.com/springboot-eks-repo:latest
      #   docker push 339712826475.dkr.ecr.us-west-2.amazonaws.com/springboot-eks-repo:latest
      #- name: Build and Push Docker Image
      #  run: |
      #    "echo 'testing job'"
      #    "git config user.email tsvsumanth47@gmail.com"
      #    "git config user.name tsvsumanth47"
      #    "cat manifests/deployment.yaml"
      #    "cd manifests && sed -i 's+339712826475.dkr.ecr.us-west-2.amazonaws.com/springboot-eks-repo.*+tsvsumanth47/myapp-repo:${BUILD_NUMBER}+g' deployment.yaml"
      #    "git add -A"
      #    "git commit -m 'Done by Jenkins Job changemanifest: ${env.BUILD_NUMBER}'"
      #    "git push  https://github.com/tsvsumanth47/myapp-repo.git HEAD:master"
      
